// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import dbms "simple-database-provisioner/src/dbms"
import mock "github.com/stretchr/testify/mock"

// DbmsProvider is an autogenerated mock type for the DbmsProvider type
type DbmsProvider struct {
	mock.Mock
}

// CreateDatabaseInstance provides a mock function with given fields: dbmsServerId, dbmsServerCredentials, databaseInstanceName
func (_m *DbmsProvider) CreateDatabaseInstance(dbmsServerId string, dbmsServerCredentials dbms.DatabaseCredentials, databaseInstanceName string) (dbms.DatabaseCredentials, error) {
	ret := _m.Called(dbmsServerId, dbmsServerCredentials, databaseInstanceName)

	var r0 dbms.DatabaseCredentials
	if rf, ok := ret.Get(0).(func(string, dbms.DatabaseCredentials, string) dbms.DatabaseCredentials); ok {
		r0 = rf(dbmsServerId, dbmsServerCredentials, databaseInstanceName)
	} else {
		r0 = ret.Get(0).(dbms.DatabaseCredentials)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, dbms.DatabaseCredentials, string) error); ok {
		r1 = rf(dbmsServerId, dbmsServerCredentials, databaseInstanceName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteDatabaseInstance provides a mock function with given fields: dbmsServerId, dbmsServerCredentials, databaseInstanceName
func (_m *DbmsProvider) DeleteDatabaseInstance(dbmsServerId string, dbmsServerCredentials dbms.DatabaseCredentials, databaseInstanceName string) error {
	ret := _m.Called(dbmsServerId, dbmsServerCredentials, databaseInstanceName)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, dbms.DatabaseCredentials, string) error); ok {
		r0 = rf(dbmsServerId, dbmsServerCredentials, databaseInstanceName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ExistsDatabaseInstance provides a mock function with given fields: dbmsServerId, dbmsServerCredentials, databaseInstanceName
func (_m *DbmsProvider) ExistsDatabaseInstance(dbmsServerId string, dbmsServerCredentials dbms.DatabaseCredentials, databaseInstanceName string) (bool, error) {
	ret := _m.Called(dbmsServerId, dbmsServerCredentials, databaseInstanceName)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, dbms.DatabaseCredentials, string) bool); ok {
		r0 = rf(dbmsServerId, dbmsServerCredentials, databaseInstanceName)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, dbms.DatabaseCredentials, string) error); ok {
		r1 = rf(dbmsServerId, dbmsServerCredentials, databaseInstanceName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Type provides a mock function with given fields:
func (_m *DbmsProvider) Type() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
